package com.recyclebin.controller;

import java.security.Principal;

import org.springframework.security.access.prepost.PreAuthorize;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.servlet.mvc.support.RedirectAttributes;

import com.recyclebin.domain.MemberVO;
import com.recyclebin.domain.ScoreVO;
import com.recyclebin.service.MemberService;

import lombok.AllArgsConstructor;
import lombok.extern.log4j.Log4j;

@Controller
@RequestMapping("member")
@Log4j
@AllArgsConstructor
public class MemberController {
	private MemberService memberservice;
	
	@GetMapping("login")
	public void login(@ModelAttribute String error, @ModelAttribute String logout, Model model) {
		log.info("error :" + error);
		log.info("logout: " + logout);
		
		if (error != null) {
			model.addAttribute("error", "Login Error Check Your Account");
		}
		
		if (logout != null) {
			model.addAttribute("logout", "logout!!");
		}
		
	}
	
	@GetMapping("join")
	public void join() {
		
	}

	@PostMapping("join")
	public String join(MemberVO vo) {
		log.info(vo);
		memberservice.join(vo);
		return "redirect:/member/login";
	}

	@GetMapping("mypage")
	@PreAuthorize("isAuthenticated()")
	public void mypage(Principal principal, Model model) {
		MemberVO vo = memberservice.get(principal.getName());
		model.addAttribute("member", vo);
	}
	
	@PreAuthorize("isAuthenticated() and principal.username == #memberVO.id")
	@PostMapping("mypage")
	public String mypage(MemberVO memberVO, RedirectAttributes rttr) {
		if(memberservice.modifyMember(memberVO)) {			
			rttr.addFlashAttribute("result", "수정");
		}
		return "redirect:/member/mypage";		
	}

	@GetMapping("profile")
	@PreAuthorize("isAuthenticated()")
	public void profile(Principal principal, Model model) {
		MemberVO vo = memberservice.get(principal.getName());
		model.addAttribute("member", vo);
		
	}

	@GetMapping("admin")
	public void admin() {
		
	}
	
	@GetMapping("maptest")
	public void maptest() {
		
	}
	
	
}
