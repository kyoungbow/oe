package com.recyclebin.controller;

import java.security.Principal;
import java.util.List;
import java.util.Optional;

import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;

import com.recyclebin.domain.BoardVO;
import com.recyclebin.domain.Criteria;
import com.recyclebin.domain.ImgFileVO;
import com.recyclebin.domain.MemberVO;
import com.recyclebin.service.BoardService;
import com.recyclebin.service.MemberService;

import lombok.AllArgsConstructor;
import lombok.extern.log4j.Log4j;

@Controller 
@RequestMapping("board/*")
@AllArgsConstructor
@Log4j
public class BoardController {
	private BoardService boardService; 
	private MemberService memberService;
	
	@GetMapping("list")
	public void list(){
	}
	
	@GetMapping("test")
	public void test(){
	}
	
//	@GetMapping("list")
//	public void list(Model model, BoardVO vo){
//		model.addAttribute("board", vo.getCategory());
//	}
	
//	@GetMapping("list") 
//	public String list(Model model, Criteria cri){
//		model.addAttribute("boards", boardService.getList(cri));
//		return "/board/list";
//	}
	
	@GetMapping({"pages/{lastBno}", "pages/{lastBno}/{amount}"})
	@ResponseBody
	public List<BoardVO> getList(
			@PathVariable(required = false) Optional<Long> lastBno, 
			@PathVariable(required = false) Optional<Integer> amount ){
		Criteria cri = new Criteria();
		cri.setLastBno(lastBno.orElse(cri.getLastBno()));
		cri.setAmount(amount.orElse(cri.getAmount()));
		return boardService.getList(cri);
		
	}
	
	@GetMapping("get")
	public void get(Long bno, Model model){
		model.addAttribute("board",boardService.get(bno));
//		return boardService.get(bno);
	}
	
	@GetMapping("modify")
	public void modify(Long bno, int category, Model model){
		model.addAttribute("board", boardService.get(bno));
		
	}
	
	@GetMapping("register")
	public void register(Principal principal, Model model){
		model.addAttribute("user", memberService.get(principal.getName()));		
	}
	
	@PostMapping("register")
	public String register(BoardVO boardVO){
		boardService.register(boardVO);
		
		log.info(boardVO.getWriter());
		return "redirect:/board/list";
	}
	
	
	@GetMapping("attachs") @ResponseBody
	public List<ImgFileVO> getAttachs(Long bno){
		return boardService.getAttachs(bno);
	}
}
